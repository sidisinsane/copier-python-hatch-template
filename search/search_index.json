{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"Copier Python Hatch Template <p>A Copier template for Python projects managed by Hatch.</p> <p> </p> <p> </p>"},{"location":"index.html#quickstart","title":"Quickstart","text":""},{"location":"index.html#generate-a-project","title":"Generate a Project","text":"<pre><code>copier copy --trust https://github.com/sidisinsane/copier-python-hatch-template.git PATH/TO/DESTINATION\n</code></pre> <p>or</p> <pre><code>copier copy --trust gh:sidisinsane/copier-python-hatch-template PATH/TO/DESTINATION\n</code></pre> <p>This will generate a new project with the following structure:</p> <pre><code>YOUR-PROJECT-NAME\n\u251c\u2500\u2500 .github\n\u2502   \u2514\u2500\u2500 workflows\n\u2502       \u251c\u2500\u2500 ci.yml\n\u2502       \u251c\u2500\u2500 codeql.yml\n\u2502       \u251c\u2500\u2500 gh-pages-deploy.yml\n\u2502       \u2514\u2500\u2500 test.yml\n\u251c\u2500\u2500 .vscode\n\u2502   \u251c\u2500\u2500 extensions.json\n\u2502   \u2514\u2500\u2500 settings.json\n\u251c\u2500\u2500 mkdocs\n\u2502   \u251c\u2500\u2500 images\n\u2502   \u2502   \u251c\u2500\u2500 favicon.svg\n\u2502   \u2502   \u2514\u2500\u2500 logo.svg\n\u2502   \u251c\u2500\u2500 javascripts\n\u2502   \u2502   \u2514\u2500\u2500 mathjax.js\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u2514\u2500\u2500 license.md\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 YOUR_PROJECT_NAME\n\u2502       \u251c\u2500\u2500 __about__.py\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u2514\u2500\u2500 calc.py\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 test_calc.py\n\u251c\u2500\u2500 .coveragerc\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .markdownlint.yml\n\u251c\u2500\u2500 .pre-commit-config.yaml\n\u251c\u2500\u2500 .pylintrc\n\u251c\u2500\u2500 bandit.yml\n\u251c\u2500\u2500 commitlint.config.js\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 mypy.ini\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 pytest.ini\n\u2514\u2500\u2500 README.md\n</code></pre> Note <p>You can also clone the project template using <code>git clone https://github.com/sidisinsane/copier-python-hatch-template.git</code>, modify it and generate a project the locally cloned repo.</p> <pre><code>copier copy --trust PATH/TO/CLONED/PROJECT/TEMPLATE PATH/TO/DESTINATION\n</code></pre>"},{"location":"index.html#aftermath","title":"Aftermath","text":""},{"location":"index.html#create-virtual-environment","title":"Create Virtual Environment","text":"<pre><code>cd PATH/TO/DESTINATION &amp;&amp; hatch env create\n</code></pre> Note <p>You can locate environments by running <code>hatch env find</code>.</p>"},{"location":"index.html#install-pre-commit-hooks","title":"Install Pre-Commit Hooks","text":"<pre><code>git init &amp;&amp; hatch run pre-commit install\n</code></pre> Note <p>After you have created a new empty GitHub project, you are ready to make your initial commit. <pre><code>git add .\ngit commit -m \"initial commit\"\ngit branch -M main\ngit remote add origin https://github.com/REPO_NAMESPACE/REPO_NAME.git\ngit push -u origin main\n</code></pre></p>"},{"location":"generate.html","title":"Generate a Project","text":"<pre><code>copier copy --trust https://github.com/sidisinsane/copier-python-hatch-template.git PATH/TO/DESTINATION\n</code></pre> <p>or</p> <pre><code>copier copy --trust gh:sidisinsane/copier-python-hatch-template PATH/TO/DESTINATION\n</code></pre> Note <p>You can also clone the project template using <code>git clone https://github.com/sidisinsane/copier-python-hatch-template.git</code>, modify it and generate a project the locally cloned repo.</p> <pre><code>copier copy --trust PATH/TO/CLONED/PROJECT/TEMPLATE PATH/TO/DESTINATION\n</code></pre>"},{"location":"generate.html#prompts","title":"Prompts","text":"<p>Copier will request your input for some prompts. Prompts are configured in the <code>copier.yml</code> file.</p> <p>Note</p> <p>This template only supports GitHub as repository provider!</p>"},{"location":"generate.html#project_name","title":"<code>project_name</code>","text":"<pre><code>\ud83c\udfa4 Your project name (main heading)\n  [None]\n</code></pre> Configuration <pre><code>project_name:\ntype: str\nhelp: Your project name (main heading)\n</code></pre>"},{"location":"generate.html#project_description","title":"<code>project_description</code>","text":"<pre><code>\ud83c\udfa4 Your project description (main description)\n  [None]\n</code></pre> Configuration <pre><code>project_description:\ntype: str\nhelp: Your project description (main description)\n</code></pre>"},{"location":"generate.html#author_fullname","title":"<code>author_fullname</code>","text":"<pre><code>\ud83c\udfa4 Your full name (project.authors.name in pyproject.toml)\n  ['Dirk Sidney Jansen' | git_user_name]\n</code></pre> <p>Note</p> <p>The <code>git_user_name</code> variable is handled by the custom Jinja2 extension at <code>extensions/git.py</code>.</p> Configuration <pre><code>author_fullname:\ntype: str\nhelp: Your full name (project.authors.name in pyproject.toml)\ndefault: \"{{ 'Dirk Sidney Jansen' | git_user_name }}\"\n</code></pre>"},{"location":"generate.html#author_email","title":"<code>author_email</code>","text":"<pre><code>\ud83c\udfa4 Your email (project.authors.email in pyproject.toml)\n  ['sidisinsane@users.noreply.github.com' | git_user_email]\n</code></pre> <p>Note</p> <p>The <code>git_user_email</code> variable is handled by the custom Jinja2 extension at <code>extensions/git.py</code>.</p> Configuration <pre><code>author_email:\ntype: str\nhelp: Your email (project.authors.email in pyproject.toml)\ndefault: \"{{ 'sidisinsane@users.noreply.github.com' | git_user_email }}\"\n</code></pre>"},{"location":"generate.html#author_username","title":"<code>author_username</code>","text":"<pre><code>\ud83c\udfa4 Your GitHub username\n  [sidisinsane]\n</code></pre> Configuration <pre><code>author_username:\ntype: str\nhelp: Your GitHub username\ndefault: sidisinsane\n</code></pre>"},{"location":"generate.html#repository_provider","title":"<code>repository_provider</code>","text":"<pre><code>\ud83c\udfa4 Your repository provider\n\u00bb github.com\n</code></pre> Configuration <pre><code>repository_provider:\ntype: str\nhelp: Your repository provider\ndefault: github.com\nchoices:\n    - github.com\n</code></pre>"},{"location":"generate.html#repository_namespace","title":"<code>repository_namespace</code>","text":"<pre><code>\ud83c\udfa4 Your repository namespace\n  [author_username] \n</code></pre> Configuration <pre><code>repository_namespace:\ntype: str\nhelp: Your repository namespace\ndefault: \"{{ author_username }}\"\n</code></pre>"},{"location":"generate.html#repository_name","title":"<code>repository_name</code>","text":"<pre><code>\ud83c\udfa4 Your repository name\n  [project_name | slugify]\n</code></pre> <p>Note</p> <p>The <code>slugify</code> method is handled by the custom Jinja2 extension at <code>extensions/slugify.py</code>.</p> Configuration <pre><code>repository_name:\ntype: str\nhelp: Your repository name\ndefault: \"{{ project_name | slugify }}\"\n</code></pre>"},{"location":"generate.html#copyright_holder","title":"<code>copyright_holder</code>","text":"<pre><code>\ud83c\udfa4 The name of the person/entity holding the copyright\n  [author_fullname]\n</code></pre> Configuration <pre><code>copyright_holder:\ntype: str\nhelp: The name of the person/entity holding the copyright\ndefault: \"{{ author_fullname }}\"\n</code></pre>"},{"location":"generate.html#copyright_holder_email","title":"<code>copyright_holder_email</code>","text":"<pre><code>\ud83c\udfa4 The email of the person/entity holding the copyright\n  [author_email]\n</code></pre> Configuration <pre><code>copyright_holder_email:\ntype: str\nhelp: The email of the person/entity holding the copyright\ndefault: \"{{ author_email }}\"\n</code></pre>"},{"location":"generate.html#copyright_date","title":"<code>copyright_date</code>","text":"<pre><code>\ud83c\udfa4 The copyright date\n  [current_year]\n</code></pre> <p>Note</p> <p>The <code>current_year</code> variable is handled by the custom Jinja2 extension at <code>date/git.py</code>.</p> Configuration <pre><code>copyright_date:\ntype: str\nhelp: The copyright date\ndefault: \"{{ current_year }}\"\n</code></pre>"},{"location":"generate.html#copyright_license","title":"<code>copyright_license</code>","text":"<pre><code>\ud83c\udfa4 Your project's license\n  (Use arrow keys)\n  Apache-2.0\n  BSD-2-Clause\n  BSD-3-Clause\n  CDDL-1.0\n  EPL-2.0\n  GPL-2.0\n  GPL-3.0-only\n  ISC\n  LGPL-2.0-only\n  LGPL-2.1\n  LGPL-3.0-only\n\u00bb MIT\n  MPL-2.0 \n</code></pre> Configuration <pre><code>copyright_license:\ntype: str\nhelp: Your project's license\ndefault: MIT\nchoices:\n- Apache-2.0\n- BSD-2-Clause\n- BSD-3-Clause\n- CDDL-1.0\n- EPL-2.0\n- GPL-2.0\n- GPL-3.0-only\n- ISC\n- LGPL-2.0-only\n- LGPL-2.1\n- LGPL-3.0-only\n- MIT\n- MPL-2.0\n</code></pre> <p>Note</p> <p>To add more licenses, add the SPDX identifier to the <code>copier.yml</code> and the license text to the <code>project/LICENSE.jinja</code> file. License texts can be found at choosealicense.com.</p>"},{"location":"generate.html#python_package_distribution_name","title":"<code>python_package_distribution_name</code>","text":"<pre><code>\ud83c\udfa4 Your Python package distribution name (for `pip install NAME`)\n  [project_name | slugify]\n</code></pre> Configuration <pre><code>python_package_distribution_name:\ntype: str\nhelp: Your Python package distribution name\ndefault: \"{{ project_name | slugify }}\"\n</code></pre> <p>The name under which your Python package will be distributed. This will be the name of your project on pypi.org for example.</p>"},{"location":"generate.html#python_package_import_name","title":"<code>python_package_import_name</code>","text":"<pre><code>\ud83c\udfa4 Your Python package import name (for `import NAME` in Python code)\n  [project_name | slugify('_')]\n</code></pre> Configuration <pre><code>python_package_import_name:\ntype: str\nhelp: Your Python package import name (for `import NAME` in Python code)\ndefault: \"{{ project_name | slugify('_') }}\"\n</code></pre> <p>The name that will be used to import your package in Python code. Yes, distribution name and import name can be different!</p>"},{"location":"generate.html#python_package_command_line_name","title":"<code>python_package_command_line_name</code>","text":"<pre><code>\ud83c\udfa4 Your CLI name if any (for use in the shell)\n  [project_name | slugify] \n</code></pre> Configuration <pre><code>python_package_command_line_name:\ntype: str\nhelp: Your CLI name if any (for use in the shell)\ndefault: \"{{ project_name | slugify }}\"\n</code></pre>"},{"location":"generate.html#output","title":"Output","text":"<pre><code>Copying from template version 0.0.0.post14.dev0+b7759ea\n    create  .\n    create  bandit.yml\n    create  .pylintrc\n    create  mkdocs.yml\n    create  pytest.ini\n    create  .pre-commit-config.yaml\n    create  README.md\n    create  tests\n    create  tests/test_calc.py\n    create  tests/__init__.py\n    create  .coveragerc\n    create  LICENSE\n    create  mypy.ini\n    create  .gitignore\n    create  .github\n    create  .github/workflows\n    create  .github/workflows/test.yml\n    create  .github/workflows/codeql.yml\n    create  .github/workflows/ci.yml\n    create  .github/workflows/gh-pages-deploy.yml\n    create  commitlint.config.js\n    create  mkdocs\n    create  mkdocs/license.md\n    create  mkdocs/images\n    create  mkdocs/images/logo.svg\n    create  mkdocs/images/favicon.svg\n    create  mkdocs/index.md\n    create  mkdocs/javascripts\n    create  mkdocs/javascripts/mathjax.js\n    create  .vscode\n    create  .vscode/settings.json\n    create  .vscode/extensions.json\n    create  .markdownlint.yml\n    create  pyproject.toml\n    create  src\n    create  src/PYTHON_PACKAGE_IMPORT_NAME\n    create  src/PYTHON_PACKAGE_IMPORT_NAME/__init__.py\n    create  src/PYTHON_PACKAGE_IMPORT_NAME/calc.py\n    create  src/PYTHON_PACKAGE_IMPORT_NAME/__about__.py\n</code></pre> <p>The generated project will have the following structure in the specified directory:</p> <pre><code>PYTHON-PACKAGE-DISTRIBUTION-NAME\n\u251c\u2500\u2500 .github\n\u2502   \u2514\u2500\u2500 workflows\n\u2502       \u251c\u2500\u2500 ci.yml\n\u2502       \u251c\u2500\u2500 codeql.yml\n\u2502       \u251c\u2500\u2500 gh-pages-deploy.yml\n\u2502       \u2514\u2500\u2500 test.yml\n\u251c\u2500\u2500 .vscode\n\u2502   \u251c\u2500\u2500 extensions.json\n\u2502   \u2514\u2500\u2500 settings.json\n\u251c\u2500\u2500 mkdocs\n\u2502   \u251c\u2500\u2500 images\n\u2502   \u2502   \u251c\u2500\u2500 favicon.svg\n\u2502   \u2502   \u2514\u2500\u2500 logo.svg\n\u2502   \u251c\u2500\u2500 javascripts\n\u2502   \u2502   \u2514\u2500\u2500 mathjax.js\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u2514\u2500\u2500 license.md\n\u251c\u2500\u2500 src\n\u2502   \u2514\u2500\u2500 PYTHON_PACKAGE_IMPORT_NAME\n\u2502       \u251c\u2500\u2500 __about__.py\n\u2502       \u251c\u2500\u2500 __init__.py\n\u2502       \u2514\u2500\u2500 calc.py\n\u251c\u2500\u2500 tests\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 test_calc.py\n\u251c\u2500\u2500 .coveragerc\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 .markdownlint.yml\n\u251c\u2500\u2500 .pre-commit-config.yaml\n\u251c\u2500\u2500 .pylintrc\n\u251c\u2500\u2500 bandit.yml\n\u251c\u2500\u2500 commitlint.config.js\n\u251c\u2500\u2500 LICENSE\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 mypy.ini\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 pytest.ini\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"license.html","title":"License","text":"<p>MIT License</p> <p>Copyright (c) 2024 Dirk Sidney Jansen</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>"},{"location":"prerequisites.html","title":"Prerequisites","text":""},{"location":"prerequisites.html#git","title":"Git","text":"<p>Git is a free and open source distributed version control system.</p>"},{"location":"prerequisites.html#install","title":"Install","text":"OS Package Manager Command linux Aptitude <code>apt install git</code> linux DNF <code>dnf install git</code> linux Pacman <code>pacman -S git</code> linux Zypper <code>zypper install git</code> macOS Homebrew <code>brew install coreutils git</code> macOS Spack <code>spack install coreutils git</code> <p>Note</p> <p>Check if <code>git</code> is already installed by running <code>git -v</code> before installing.</p>"},{"location":"prerequisites.html#asdf","title":"Asdf","text":"<p>Asdf is a multiple runtime version manager.</p>"},{"location":"prerequisites.html#install-asdf","title":"Install Asdf","text":"<p>Visit the asdf getting started page for detailed instructions.</p>"},{"location":"prerequisites.html#python-3","title":"Python 3","text":"<p>Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.</p>"},{"location":"prerequisites.html#install-asdf-python-plugin","title":"Install Asdf Python Plugin","text":"<pre><code>asdf plugin add python\n</code></pre> Note <p>To list all installed plugins run <code>asdf plugin list</code>. To list all available plugins run <code>asdf plugin list all</code>.</p>"},{"location":"prerequisites.html#install-python-version","title":"Install Python Version","text":"<pre><code>asdf install python latest\n</code></pre> <p>or</p> <pre><code>asdf install python 3.12.2\n</code></pre> Note <p>To list all installed python versions run <code>asdf list python</code>. To list all available python versions run <code>asdf list all python</code>.</p>"},{"location":"prerequisites.html#set-a-default-python-version","title":"Set a Default Python Version","text":"<pre><code>asdf global python latest\n</code></pre> <p>or</p> <pre><code>asdf global python 3.12.2\n</code></pre>"},{"location":"prerequisites.html#set-a-python-version-for-your-project","title":"Set a Python Version for Your Project","text":"<pre><code>cd PATH/TO/PROJECT &amp;&amp; asdf local python latest\n</code></pre> <p>or</p> <pre><code>cd PATH/TO/PROJECT &amp;&amp; asdf local python 3.12.2\n</code></pre> Note <p>The local Python version will be set in a <code>.tool-versions</code> file within the current directory. <code>.tool-versions</code> <pre><code>python 3.12.2\n</code></pre></p>"},{"location":"prerequisites.html#copier","title":"Copier","text":"<p>Copier is a library and CLI app for rendering project templates.</p>"},{"location":"prerequisites.html#install-copier","title":"Install Copier","text":"Requirement <p>If you haven\u2019t already, install <code>pipx</code> first: <code>pip install --user pipx</code>.</p> <pre><code>pipx install copier\n</code></pre>"},{"location":"prerequisites.html#inject-copier-templates-extensions","title":"Inject Copier Templates Extensions","text":"<pre><code>pipx inject copier copier-templates-extensions\n</code></pre>"},{"location":"prerequisites.html#hatch","title":"Hatch","text":"<p>Hatch is a modern, PEP 621 compliant, extensible Python project manager.</p>"},{"location":"prerequisites.html#install-hatch","title":"Install Hatch","text":"<pre><code>pipx install hatch\n</code></pre>"},{"location":"prerequisites.html#configure-hatch","title":"Configure Hatch","text":"<p>Store virtual environments in a directory named <code>.hatch</code> in each project directory.</p> <pre><code>hatch config set dirs.env.virtual .hatch\n</code></pre> Note <p>This adds the following to the configuration: <pre><code>[dirs.env]\nvirtual = \".hatch\"\n</code></pre> The Configuration for Hatch is stored in a <code>config.toml</code> file at i.e. <code>~/Library/Application Support/hatch</code> on macOS.</p>"},{"location":"prerequisites.html#github","title":"GitHub","text":"<p>You will need a GitHub account for the GitHub Actions workflow.</p>"}]}